/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("// import Example from \"./scripts/example\";\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n//     const main = document.getElementById(\"main\");\n//     new Example(main);\n// });\n\nconst Game = __webpack_require__(/*! ./scripts/game.js */ \"./src/scripts/game.js\");\nconst GameView = __webpack_require__(/*! ./scripts/game_view.js */ \"./src/scripts/game_view.js\");\nlet canvasWidth = window.innerWidth * .65;\nlet canvasHeight = window.innerHeight * .65;\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const canvasEle = document.getElementsByTagName(\"canvas\")[0];\n  canvasEle.width = canvasWidth;\n  canvasEle.height = canvasHeight;\n  const context = canvasEle.getContext(\"2d\");\n  const game = new Game();\n  const gameView = new GameView(context, game);\n  gameView.animate();\n\n  // gorilla1.draw(context);\n  // gorilla2.draw(context);\n\n  // banana1.draw(context);\n  // banana2.draw(context);\n\n  // if (turn === 1) {\n  //     banana1.draw(context);\n  // } else {\n  //     banana2.draw(context);\n  // }\n\n  // setInterval(function () {\n  //     context.clearRect(0, 0, canvasEle.width, canvasEle.height);\n\n  //     banana1.move(context);\n  //     banana1.draw(context);\n\n  //     banana2.move(context);\n  //     banana2.draw(context);\n  // }, 10);\n\n  // window.requestAnimationFrame(function () {\n  //     if (turn === 1) {\n  //         banana1.draw(context);\n  //     } else {\n  //         banana2.draw(context);\n  //     }\n  // })\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTUEsSUFBSSxHQUFHQyxtQkFBTyxDQUFDLGdEQUFtQixDQUFDO0FBQ3pDLE1BQU1DLFFBQVEsR0FBR0QsbUJBQU8sQ0FBQywwREFBd0IsQ0FBQztBQUVsRCxJQUFJRSxXQUFXLEdBQUdDLE1BQU0sQ0FBQ0MsVUFBVSxHQUFHLEdBQUc7QUFDekMsSUFBSUMsWUFBWSxHQUFHRixNQUFNLENBQUNHLFdBQVcsR0FBRyxHQUFHO0FBRzNDQyxRQUFRLENBQUNDLGdCQUFnQixDQUFDLGtCQUFrQixFQUFFLFlBQVk7RUFFdEQsTUFBTUMsU0FBUyxHQUFHRixRQUFRLENBQUNHLG9CQUFvQixDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUU1REQsU0FBUyxDQUFDRSxLQUFLLEdBQUdULFdBQVc7RUFDN0JPLFNBQVMsQ0FBQ0csTUFBTSxHQUFHUCxZQUFZO0VBRS9CLE1BQU1RLE9BQU8sR0FBR0osU0FBUyxDQUFDSyxVQUFVLENBQUMsSUFBSSxDQUFDO0VBRTFDLE1BQU1DLElBQUksR0FBRyxJQUFJaEIsSUFBSSxFQUFFO0VBQ3ZCLE1BQU1pQixRQUFRLEdBQUcsSUFBSWYsUUFBUSxDQUFDWSxPQUFPLEVBQUVFLElBQUksQ0FBQztFQUM1Q0MsUUFBUSxDQUFDQyxPQUFPLEVBQUU7O0VBRWxCO0VBQ0E7O0VBRUE7RUFDQTs7RUFFQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztFQUVBO0VBQ0E7O0VBRUE7RUFDQTs7RUFFQTtFQUNBO0VBQ0E7O0VBRUE7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nb3JpbGxhcy8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBFeGFtcGxlIGZyb20gXCIuL3NjcmlwdHMvZXhhbXBsZVwiO1xuXG4vLyBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG4vLyAgICAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbi8vICAgICBuZXcgRXhhbXBsZShtYWluKTtcbi8vIH0pO1xuXG5jb25zdCBHYW1lID0gcmVxdWlyZShcIi4vc2NyaXB0cy9nYW1lLmpzXCIpO1xuY29uc3QgR2FtZVZpZXcgPSByZXF1aXJlKFwiLi9zY3JpcHRzL2dhbWVfdmlldy5qc1wiKTtcblxubGV0IGNhbnZhc1dpZHRoID0gd2luZG93LmlubmVyV2lkdGggKiAuNjU7XG5sZXQgY2FudmFzSGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0ICogLjY1O1xuXG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGZ1bmN0aW9uICgpIHtcblxuICAgIGNvbnN0IGNhbnZhc0VsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiY2FudmFzXCIpWzBdO1xuXG4gICAgY2FudmFzRWxlLndpZHRoID0gY2FudmFzV2lkdGg7XG4gICAgY2FudmFzRWxlLmhlaWdodCA9IGNhbnZhc0hlaWdodDtcblxuICAgIGNvbnN0IGNvbnRleHQgPSBjYW52YXNFbGUuZ2V0Q29udGV4dChcIjJkXCIpO1xuXG4gICAgY29uc3QgZ2FtZSA9IG5ldyBHYW1lKCk7XG4gICAgY29uc3QgZ2FtZVZpZXcgPSBuZXcgR2FtZVZpZXcoY29udGV4dCwgZ2FtZSk7XG4gICAgZ2FtZVZpZXcuYW5pbWF0ZSgpO1xuXG4gICAgLy8gZ29yaWxsYTEuZHJhdyhjb250ZXh0KTtcbiAgICAvLyBnb3JpbGxhMi5kcmF3KGNvbnRleHQpO1xuXG4gICAgLy8gYmFuYW5hMS5kcmF3KGNvbnRleHQpO1xuICAgIC8vIGJhbmFuYTIuZHJhdyhjb250ZXh0KTtcblxuICAgIC8vIGlmICh0dXJuID09PSAxKSB7XG4gICAgLy8gICAgIGJhbmFuYTEuZHJhdyhjb250ZXh0KTtcbiAgICAvLyB9IGVsc2Uge1xuICAgIC8vICAgICBiYW5hbmEyLmRyYXcoY29udGV4dCk7XG4gICAgLy8gfVxuXG4gICAgLy8gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgIC8vICAgICBjb250ZXh0LmNsZWFyUmVjdCgwLCAwLCBjYW52YXNFbGUud2lkdGgsIGNhbnZhc0VsZS5oZWlnaHQpO1xuXG4gICAgLy8gICAgIGJhbmFuYTEubW92ZShjb250ZXh0KTtcbiAgICAvLyAgICAgYmFuYW5hMS5kcmF3KGNvbnRleHQpO1xuXG4gICAgLy8gICAgIGJhbmFuYTIubW92ZShjb250ZXh0KTtcbiAgICAvLyAgICAgYmFuYW5hMi5kcmF3KGNvbnRleHQpO1xuICAgIC8vIH0sIDEwKTtcblxuICAgIC8vIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkge1xuICAgIC8vICAgICBpZiAodHVybiA9PT0gMSkge1xuICAgIC8vICAgICAgICAgYmFuYW5hMS5kcmF3KGNvbnRleHQpO1xuICAgIC8vICAgICB9IGVsc2Uge1xuICAgIC8vICAgICAgICAgYmFuYW5hMi5kcmF3KGNvbnRleHQpO1xuICAgIC8vICAgICB9XG4gICAgLy8gfSlcbn0pXG5cbiJdLCJuYW1lcyI6WyJHYW1lIiwicmVxdWlyZSIsIkdhbWVWaWV3IiwiY2FudmFzV2lkdGgiLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiY2FudmFzSGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjYW52YXNFbGUiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsIndpZHRoIiwiaGVpZ2h0IiwiY29udGV4dCIsImdldENvbnRleHQiLCJnYW1lIiwiZ2FtZVZpZXciLCJhbmltYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/banana.js":
/*!*******************************!*\
  !*** ./src/scripts/banana.js ***!
  \*******************************/
/***/ (function(module) {

eval("// const canvasEle = document.getElementsByTagName(\"canvas\")[0];\n// const canvasLeft = canvasEle.getBoundingClientRect().left;\n// const canvasRight = canvasEle.getBoundingClientRect().right;\n// const canvasTop = canvasEle.getBoundingClientRect().top;\n// const canvasBottom = canvasEle.getBoundingClientRect().bottom;\n\nlet canvasWidth = window.innerWidth * .65;\nlet canvasHeight = window.innerHeight * .65;\nfunction Banana(object) {\n  this.pos = object.pos;\n  this.vel = object.vel;\n  this.color = object.color;\n  this.gravityY = 0;\n  this.gravity = 0.0098;\n  this.radius = 15;\n  this.degree = 1;\n  this.player = object.player;\n}\nfunction calculateRadians(degree) {\n  let radians = degree * (Math.PI / 180);\n  return radians;\n}\nBanana.prototype.draw = function (context) {\n  // context.clearRect(0, 0, canvasWidth, canvasHeight);\n\n  context.fillStyle = this.color;\n  context.save();\n  context.beginPath();\n  context.arc(this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI);\n  context.translate(this.pos[0], this.pos[1]);\n  if (this.player === \"Y\") {\n    context.rotate(calculateRadians(this.degree));\n    this.degree = this.degree + 3;\n  } else {\n    context.rotate(-1 * calculateRadians(this.degree));\n    this.degree = this.degree + 4;\n  }\n  context.translate(-1 * this.pos[0], -1 * this.pos[1]);\n\n  // context.fill();\n\n  let banana_img = document.getElementById(\"banana\");\n  context.drawImage(banana_img, this.pos[0] - this.radius, this.pos[1] - this.radius, 2 * this.radius, 2 * this.radius);\n  context.closePath();\n  context.restore();\n  this.move();\n\n  // let that = this;\n};\n\nBanana.prototype.move = function () {\n  this.gravityY += this.gravity;\n  this.pos[0] += this.vel[0];\n  this.pos[1] += this.vel[1] + this.gravityY;\n};\nBanana.prototype.outOfBounds = function () {\n  if (this.pos[0] > canvasWidth || this.pos[0] < 0 || this.pos[1] > canvasHeight) {\n    return true;\n  } else {\n    return false;\n  }\n};\nBanana.prototype.hasCollidedWithGorilla = function (gorilla) {\n  let xBanana = this.pos[0];\n  let yBanana = this.pos[1];\n  let radiusBanana = this.radius;\n  let xGorilla = gorilla.center[0];\n  let yGorilla = gorilla.center[1];\n  let xDiff = Math.abs(xBanana - xGorilla);\n  let yDiff = Math.abs(yBanana - yGorilla);\n  if (xDiff <= radiusBanana + gorilla.width / 2 && yDiff <= radiusBanana + gorilla.height / 2) {\n    return true;\n  } else {\n    return false;\n  }\n};\nBanana.prototype.hasCollidedWithTree = function (allTrees) {\n  let xBanana = this.pos[0];\n  let yBanana = this.pos[1];\n  let radiusBanana = this.radius;\n  let collided = false;\n  allTrees.forEach(tree => {\n    let xTree = tree.center[0];\n    let yTree = tree.center[1];\n    let xDiff = Math.abs(xBanana - xTree);\n    let yDiff = Math.abs(yBanana - yTree);\n    let xCollDiff = radiusBanana + tree.width / 2;\n    let yCollDiff = radiusBanana + tree.height / 2;\n    if (xDiff <= xCollDiff && yDiff <= yCollDiff) {\n      collided = true;\n    }\n  });\n  return collided;\n};\nBanana.prototype.hasCollided = function (gorilla, allTrees) {\n  if (this.outOfBounds() || this.hasCollidedWithGorilla(gorilla) || this.hasCollidedWithTree(allTrees)) {\n    return true;\n  } else {\n    return false;\n  }\n};\nmodule.exports = Banana;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/banana.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Banana = __webpack_require__(/*! ./banana.js */ \"./src/scripts/banana.js\");\nconst Gorilla = __webpack_require__(/*! ./gorilla.js */ \"./src/scripts/gorilla.js\");\nconst Tree = __webpack_require__(/*! ./tree.js */ \"./src/scripts/tree.js\");\nconst LineGauge = __webpack_require__(/*! ./line_gauge.js */ \"./src/scripts/line_gauge.js\");\nlet canvasWidth = window.innerWidth * .65;\nlet canvasHeight = window.innerHeight * .65;\n\n//trees initialization\nlet allTrees = [];\nconst firstTree = new Tree({\n  type: 3,\n  posX: canvasWidth * (5 / 20)\n});\nallTrees.push(firstTree);\nconst secondTree = new Tree({\n  type: 2,\n  posX: canvasWidth * (7.25 / 20)\n});\nallTrees.push(secondTree);\nconst thirdTree = new Tree({\n  type: 1,\n  posX: canvasWidth * (9.50 / 20)\n});\nallTrees.push(thirdTree);\nconst fourthTree = new Tree({\n  type: 2,\n  posX: canvasWidth * (11.75 / 20)\n});\nallTrees.push(fourthTree);\nconst fifthTree = new Tree({\n  type: 3,\n  posX: canvasWidth * (14 / 20) //(canvasWidth * (3 / 4)) - (canvasWidth / 20)\n});\n\nallTrees.push(fifthTree);\nlet stump = document.getElementById(\"stump\");\n\n//gorillas initialization\n\nlet playerThrowImg = document.getElementById(\"throw_player\");\nlet compThrowImg = document.getElementById(\"throw_comp\");\n// let upsideDownLeftImg = document.getElementById(\"upside_down_left\");\n// let upsideDownRightImg = document.getElementById(\"upside_down_right\");\n\nlet xGorilla1 = canvasWidth / 15 * (3 / 4);\nconst gorilla1 = new Gorilla({\n  pos: [xGorilla1, canvasHeight * (75 / 100)],\n  color: '#440000',\n  player: \"Y\"\n}, {\n  throwingImg: playerThrowImg\n});\nlet xGorilla2 = canvasWidth - canvasWidth / 15 * (3 / 4) - 1.25 * (canvasWidth / 15);\nconst gorilla2 = new Gorilla({\n  pos: [xGorilla2, canvasHeight * (75 / 100)],\n  //old xpos = canvasWidth * (177 / 200)\n  color: '#964B00',\n  player: \"N\"\n}, {\n  throwingImg: compThrowImg\n});\n\n//bananas initialization\n\nconst banana1 = new Banana({\n  // pos: [xGorilla1 + ((canvasWidth / 15) * (1 / 2)), canvasHeight * (75 / 100)],\n  pos: [gorilla1.center[0], gorilla1.center[1]],\n  vel: [0, 0],\n  // vel: [0, -100],\n  color: '#F6BE00',\n  //yellow in hex\n  player: \"Y\"\n});\nconst banana2 = new Banana({\n  // pos: [xGorilla2 + ((canvasWidth / 15) * (1 / 2)), canvasHeight * (75 / 100)],\n  pos: [gorilla2.center[0], gorilla2.center[1]],\n  vel: [-1.6, -2],\n  color: '#F67E80',\n  player: \"N\"\n});\n\n// window.Banana = Banana;\n\n//Line Gauge\nconst lineGauge = new LineGauge({\n  pos: [gorilla1.center[0], gorilla1.center[1]]\n});\nfunction Game() {\n  this.turn = 1;\n}\nlet hit = false;\nlet finished = false;\nGame.prototype.draw = function (context) {\n  context.clearRect(0, 0, canvasWidth, canvasHeight);\n  allTrees.forEach(tree => tree.draw(context));\n  context.drawImage(stump, gorilla1.pos[0] / 2, gorilla1.pos[1] + gorilla1.height, gorilla1.width * 1.5, gorilla1.height);\n  context.drawImage(stump, gorilla2.pos[0] - gorilla2.width / 4, gorilla2.pos[1] + gorilla2.height, gorilla2.width * 1.5, gorilla2.height);\n  if (this.turn === 1) {\n    lineGauge.draw(context);\n    if (lineGauge.vectorDegree && lineGauge.vectorWidth) {\n      banana1.vel = lineGauge.getVector(lineGauge.vectorDegree, lineGauge.vectorWidth);\n      THROWING_TICK++;\n      if (THROWING_TICK < 25) {\n        gorilla1.draw(context, \"throw\");\n      } else {\n        gorilla1.draw(context);\n      }\n\n      // if (hit) {\n      //     gorilla2.draw(context, \"hit\");\n      // } else {\n      gorilla2.draw(context);\n      // }\n\n      if (!banana1.hasCollided(gorilla2, allTrees)) {\n        banana1.draw(context);\n      } else {\n        if (banana1.hasCollidedWithGorilla(gorilla2)) {\n          setTimeout(() => {\n            hit = false;\n            this.turn = 2; //switch turn\n            HIT_TICK = 0;\n            THROWING_TICK = 0;\n          }, 2000);\n          hit = true;\n\n          // THROWING_TICK = 0;\n\n          // this.turn = 2; //switch turn\n          TICK = 15; //gorilla2 is jumping immediately after ending throw (15 + 25 = 40)\n          banana1.pos = [gorilla1.center[0], gorilla1.center[1]]; //reset player's banana pos\n          // banana1.vel = [1.5, -2]; //reset player's banana vel\n          banana1.gravityY = 0; //reset player's banana gravity\n          lineGauge.vectorDegree = undefined;\n          lineGauge.vectorWidth = undefined;\n          banana2.degree = 1;\n        } else {\n          setTimeout(() => {\n            this.turn = 2; //switch turn\n            THROWING_TICK = 0;\n          }, 2000);\n          // THROWING_TICK = 0;\n\n          // this.turn = 2; //switch turn\n          // TICK = 15; //gorilla2 is jumping immediately after ending throw (15 + 25 = 40)\n          banana1.pos = [gorilla1.center[0], gorilla1.center[1]]; //reset player's banana pos\n          // banana1.vel = [1.5, -2]; //reset player's banana vel\n          banana1.gravityY = 0; //reset player's banana gravity\n          lineGauge.vectorDegree = undefined;\n          lineGauge.vectorWidth = undefined;\n          banana2.degree = 1;\n        }\n      }\n    } else {\n      gorilla1.draw(context);\n      if (hit) {\n        HIT_TICK++;\n        gorilla2.draw(context, \"hit\");\n      } else {\n        gorilla2.draw(context);\n      }\n    }\n  } else {\n    THROWING_TICK++;\n\n    // console.log(THROWING_TICK);\n\n    if (THROWING_TICK < 25) {\n      gorilla2.draw(context, \"throw\");\n    } else {\n      gorilla2.draw(context);\n    }\n    if (hit) {\n      HIT_TICK++;\n      gorilla1.draw(context, \"hit\");\n    } else {\n      gorilla1.draw(context);\n    }\n\n    // gorilla1.draw(context);\n\n    // gorilla2.draw(context);\n\n    if (!banana2.hasCollided(gorilla1, allTrees)) {\n      if (!finished) {\n        banana2.draw(context);\n      }\n    } else {\n      finished = true;\n      if (banana2.hasCollidedWithGorilla(gorilla1)) {\n        setTimeout(() => {\n          hit = false;\n          this.turn = 1; //switch turn\n          HIT_TICK = 0;\n          finished = false;\n          THROWING_TICK = 0;\n        }, 2000);\n\n        // THROWING_TICK = 0;\n\n        hit = true;\n        // this.turn = 1; //switch turn\n        banana2.pos = [gorilla2.center[0], gorilla2.center[1]]; //reset opponent's banana pos\n        // Math.random() * (max - min) + min;\n        // let xVel = Math.random() * ()\n        banana2.vel = [-5.5, -2.5]; //reset opponent's banana vel\n\n        banana2.gravityY = 0; //reset opponent's banana gravity\n\n        banana1.degree = 1;\n        lineGauge.degree = 1;\n        let originalWidth = canvasWidth / 15;\n        lineGauge.width = originalWidth;\n        lineGauge.spacebarCounter = 0;\n      } else {\n        setTimeout(() => {\n          this.turn = 1; //switch turn\n          finished = false;\n          THROWING_TICK = 0;\n        }, 2000);\n\n        // THROWING_TICK = 0;\n\n        // this.turn = 1; //switch turn\n        banana2.pos = [gorilla2.center[0], gorilla2.center[1]]; //reset opponent's banana pos\n        // Math.random() * (max - min) + min;\n\n        //OPPNENT GORILLA AI\n        banana2.vel[0] = -1 * (Math.random() * (2.2 - 1.2) + 1.2); //reset opponent's banana vel\n        banana2.vel[1] = -1 * (Math.random() * (2.8 - 1.2) + 1.2); //reset opponent's banana vel\n        console.log(banana2.vel);\n        // banana2.vel = [-5.5, -2.5] //reset opponent's banana vel\n        banana2.gravityY = 0; //reset opponent's banana gravity\n\n        banana1.degree = 1;\n        lineGauge.degree = 1;\n        let originalWidth = canvasWidth / 15;\n        lineGauge.width = originalWidth;\n        lineGauge.spacebarCounter = 0;\n      }\n\n      // THROWING_TICK = 0;\n\n      // this.turn = 1; //switch turn\n      // banana2.pos = [gorilla2.center[0], gorilla2.center[1]]; //reset opponent's banana pos\n      // banana2.vel = [-5.5, -2.5] //reset opponent's banana vel\n      // banana2.gravityY = 0; //reset opponent's banana gravity\n\n      // banana1.degree = 1;\n\n      // lineGauge.degree = 1;\n      // let originalWidth = ((canvasWidth / 15));\n      // lineGauge.width = originalWidth;\n      // lineGauge.spacebarCounter = 0;\n    }\n  }\n};\n\nmodule.exports = Game;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/game_view.js":
/*!**********************************!*\
  !*** ./src/scripts/game_view.js ***!
  \**********************************/
/***/ (function(module) {

eval("function GameView(context, game) {\n  this.context = context;\n  this.game = game;\n}\nwindow.TICK = 0;\nwindow.THROWING_TICK = 0;\nwindow.HIT_TICK = 0;\nGameView.prototype.animate = function animate() {\n  this.game.draw(this.context);\n  TICK++;\n  // console.log(TICK);\n\n  requestAnimationFrame(this.animate.bind(this));\n};\nmodule.exports = GameView;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9nYW1lX3ZpZXcuanMuanMiLCJuYW1lcyI6WyJHYW1lVmlldyIsImNvbnRleHQiLCJnYW1lIiwid2luZG93IiwiVElDSyIsIlRIUk9XSU5HX1RJQ0siLCJISVRfVElDSyIsInByb3RvdHlwZSIsImFuaW1hdGUiLCJkcmF3IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiYmluZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL2dvcmlsbGFzLy4vc3JjL3NjcmlwdHMvZ2FtZV92aWV3LmpzPzgwZWUiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gR2FtZVZpZXcoY29udGV4dCwgZ2FtZSkge1xuICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XG4gICAgdGhpcy5nYW1lID0gZ2FtZTtcbn1cblxud2luZG93LlRJQ0sgPSAwO1xuXG53aW5kb3cuVEhST1dJTkdfVElDSyA9IDA7XG5cbndpbmRvdy5ISVRfVElDSyA9IDA7XG5cbkdhbWVWaWV3LnByb3RvdHlwZS5hbmltYXRlID0gZnVuY3Rpb24gYW5pbWF0ZSgpIHtcblxuICAgIHRoaXMuZ2FtZS5kcmF3KHRoaXMuY29udGV4dCk7XG5cbiAgICBUSUNLKys7XG4gICAgLy8gY29uc29sZS5sb2coVElDSyk7XG5cbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5hbmltYXRlLmJpbmQodGhpcykpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEdhbWVWaWV3OyJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsUUFBUSxDQUFDQyxPQUFPLEVBQUVDLElBQUksRUFBRTtFQUM3QixJQUFJLENBQUNELE9BQU8sR0FBR0EsT0FBTztFQUN0QixJQUFJLENBQUNDLElBQUksR0FBR0EsSUFBSTtBQUNwQjtBQUVBQyxNQUFNLENBQUNDLElBQUksR0FBRyxDQUFDO0FBRWZELE1BQU0sQ0FBQ0UsYUFBYSxHQUFHLENBQUM7QUFFeEJGLE1BQU0sQ0FBQ0csUUFBUSxHQUFHLENBQUM7QUFFbkJOLFFBQVEsQ0FBQ08sU0FBUyxDQUFDQyxPQUFPLEdBQUcsU0FBU0EsT0FBTyxHQUFHO0VBRTVDLElBQUksQ0FBQ04sSUFBSSxDQUFDTyxJQUFJLENBQUMsSUFBSSxDQUFDUixPQUFPLENBQUM7RUFFNUJHLElBQUksRUFBRTtFQUNOOztFQUVBTSxxQkFBcUIsQ0FBQyxJQUFJLENBQUNGLE9BQU8sQ0FBQ0csSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2xELENBQUM7QUFFREMsTUFBTSxDQUFDQyxPQUFPLEdBQUdiLFFBQVEifQ==\n//# sourceURL=webpack-internal:///./src/scripts/game_view.js\n");

/***/ }),

/***/ "./src/scripts/gorilla.js":
/*!********************************!*\
  !*** ./src/scripts/gorilla.js ***!
  \********************************/
/***/ (function(module) {

eval("// function Gorilla(object) {\n//     this.pos = object.pos;\n// }\n\nlet canvasWidth = window.innerWidth * .65;\nlet canvasHeight = window.innerHeight * .65;\nfunction Gorilla(object, spriteObject) {\n  this.pos = object.pos;\n  this.color = object.color;\n  this.width = 1.25 * (canvasWidth / 15);\n  this.height = canvasWidth / 15;\n  this.center = [this.pos[0] + this.width / 2, this.pos[1] + this.height / 2];\n  this.player = object.player;\n  if (spriteObject.throwingImg) this.throwingImg = spriteObject.throwingImg;\n}\nGorilla.prototype.draw = function (context) {\n  let sprite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  context.fillStyle = this.color;\n  context.beginPath();\n  // context.rect(this.pos[0], this.pos[1], this.width, this.width);\n\n  //sprite renderer\n\n  if (this.player === \"Y\") {\n    let img;\n    if (sprite === \"throw\") {\n      img = this.throwingImg;\n    } else if (sprite === \"hit\") {\n      if (Math.floor(HIT_TICK / 5) % 2 === 0) {\n        img = document.getElementById(\"upside_down_right_brown\");\n      } else {\n        img = document.getElementById(\"upside_down_left_brown\");\n      }\n    } else {\n      img = document.getElementById(\"neutral2_brown\");\n    }\n    context.drawImage(img, this.pos[0], this.pos[1], this.width, this.width);\n  } else {\n    let img;\n    if (sprite === \"throw\") {\n      img = this.throwingImg;\n    } else if (sprite === \"hit\") {\n      if (Math.floor(HIT_TICK / 5) % 2 === 0) {\n        img = document.getElementById(\"upside_down_left\");\n      } else {\n        img = document.getElementById(\"upside_down_right\");\n      }\n    } else {\n      if (Math.floor(TICK / 40) % 3 === 0) {\n        img = document.getElementById(\"neutral2\");\n      } else if (Math.floor(TICK / 40) % 3 === 1) {\n        img = document.getElementById(\"jumping_right\");\n      } else {\n        img = document.getElementById(\"jumping_left\");\n      }\n    }\n    context.drawImage(img, this.pos[0], this.pos[1], this.width, this.width);\n  }\n\n  // let img = document.getElementById(\"neutral\");\n\n  // context.drawImage(img, this.pos[0], this.pos[1], this.width, this.width);\n\n  context.fill();\n  context.closePath();\n};\nmodule.exports = Gorilla;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9nb3JpbGxhLmpzLmpzIiwibmFtZXMiOlsiY2FudmFzV2lkdGgiLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiY2FudmFzSGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJHb3JpbGxhIiwib2JqZWN0Iiwic3ByaXRlT2JqZWN0IiwicG9zIiwiY29sb3IiLCJ3aWR0aCIsImhlaWdodCIsImNlbnRlciIsInBsYXllciIsInRocm93aW5nSW1nIiwicHJvdG90eXBlIiwiZHJhdyIsImNvbnRleHQiLCJzcHJpdGUiLCJmaWxsU3R5bGUiLCJiZWdpblBhdGgiLCJpbWciLCJNYXRoIiwiZmxvb3IiLCJISVRfVElDSyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJkcmF3SW1hZ2UiLCJUSUNLIiwiZmlsbCIsImNsb3NlUGF0aCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL2dvcmlsbGFzLy4vc3JjL3NjcmlwdHMvZ29yaWxsYS5qcz9jOGY4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGZ1bmN0aW9uIEdvcmlsbGEob2JqZWN0KSB7XG4vLyAgICAgdGhpcy5wb3MgPSBvYmplY3QucG9zO1xuLy8gfVxuXG5sZXQgY2FudmFzV2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aCAqIC42NTtcbmxldCBjYW52YXNIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQgKiAuNjU7XG5cbmZ1bmN0aW9uIEdvcmlsbGEob2JqZWN0LCBzcHJpdGVPYmplY3QpIHtcbiAgICB0aGlzLnBvcyA9IG9iamVjdC5wb3M7XG4gICAgdGhpcy5jb2xvciA9IG9iamVjdC5jb2xvcjtcbiAgICB0aGlzLndpZHRoID0gMS4yNSAqIChjYW52YXNXaWR0aCAvIDE1KTtcbiAgICB0aGlzLmhlaWdodCA9IGNhbnZhc1dpZHRoIC8gMTU7XG4gICAgdGhpcy5jZW50ZXIgPSBbXG4gICAgICAgIHRoaXMucG9zWzBdICsgKHRoaXMud2lkdGggLyAyKSxcbiAgICAgICAgdGhpcy5wb3NbMV0gKyAodGhpcy5oZWlnaHQgLyAyKVxuICAgIF1cbiAgICB0aGlzLnBsYXllciA9IG9iamVjdC5wbGF5ZXI7XG5cbiAgICBpZiAoc3ByaXRlT2JqZWN0LnRocm93aW5nSW1nKSB0aGlzLnRocm93aW5nSW1nID0gc3ByaXRlT2JqZWN0LnRocm93aW5nSW1nO1xufVxuXG5Hb3JpbGxhLnByb3RvdHlwZS5kcmF3ID0gZnVuY3Rpb24gKGNvbnRleHQsIHNwcml0ZSA9IG51bGwpIHtcblxuICAgIGNvbnRleHQuZmlsbFN0eWxlID0gdGhpcy5jb2xvcjtcbiAgICBjb250ZXh0LmJlZ2luUGF0aCgpO1xuICAgIC8vIGNvbnRleHQucmVjdCh0aGlzLnBvc1swXSwgdGhpcy5wb3NbMV0sIHRoaXMud2lkdGgsIHRoaXMud2lkdGgpO1xuXG4gICAgLy9zcHJpdGUgcmVuZGVyZXJcblxuICAgIGlmICh0aGlzLnBsYXllciA9PT0gXCJZXCIpIHtcbiAgICAgICAgbGV0IGltZztcbiAgICAgICAgaWYgKHNwcml0ZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgICBpbWcgPSB0aGlzLnRocm93aW5nSW1nO1xuICAgICAgICB9IGVsc2UgaWYgKHNwcml0ZSA9PT0gXCJoaXRcIikge1xuICAgICAgICAgICAgaWYgKE1hdGguZmxvb3IoSElUX1RJQ0sgLyA1KSAlIDIgPT09IDApIHtcbiAgICAgICAgICAgICAgICBpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVwc2lkZV9kb3duX3JpZ2h0X2Jyb3duXCIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVwc2lkZV9kb3duX2xlZnRfYnJvd25cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5ldXRyYWwyX2Jyb3duXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29udGV4dC5kcmF3SW1hZ2UoaW1nLCB0aGlzLnBvc1swXSwgdGhpcy5wb3NbMV0sIHRoaXMud2lkdGgsIHRoaXMud2lkdGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCBpbWc7XG4gICAgICAgIGlmIChzcHJpdGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgICAgaW1nID0gdGhpcy50aHJvd2luZ0ltZztcbiAgICAgICAgfSBlbHNlIGlmIChzcHJpdGUgPT09IFwiaGl0XCIpIHtcbiAgICAgICAgICAgIGlmIChNYXRoLmZsb29yKEhJVF9USUNLIC8gNSkgJSAyID09PSAwKSB7XG4gICAgICAgICAgICAgICAgaW1nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ1cHNpZGVfZG93bl9sZWZ0XCIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVwc2lkZV9kb3duX3JpZ2h0XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKE1hdGguZmxvb3IoVElDSyAvIDQwKSAlIDMgPT09IDApIHtcbiAgICAgICAgICAgICAgICBpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5ldXRyYWwyXCIpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChNYXRoLmZsb29yKFRJQ0sgLyA0MCkgJSAzID09PSAxKSB7XG4gICAgICAgICAgICAgICAgaW1nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJqdW1waW5nX3JpZ2h0XCIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImp1bXBpbmdfbGVmdFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb250ZXh0LmRyYXdJbWFnZShpbWcsIHRoaXMucG9zWzBdLCB0aGlzLnBvc1sxXSwgdGhpcy53aWR0aCwgdGhpcy53aWR0aCk7XG5cbiAgICB9XG5cbiAgICAvLyBsZXQgaW1nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuZXV0cmFsXCIpO1xuXG4gICAgLy8gY29udGV4dC5kcmF3SW1hZ2UoaW1nLCB0aGlzLnBvc1swXSwgdGhpcy5wb3NbMV0sIHRoaXMud2lkdGgsIHRoaXMud2lkdGgpO1xuXG4gICAgY29udGV4dC5maWxsKCk7XG4gICAgY29udGV4dC5jbG9zZVBhdGgoKTtcblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEdvcmlsbGE7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSUEsV0FBVyxHQUFHQyxNQUFNLENBQUNDLFVBQVUsR0FBRyxHQUFHO0FBQ3pDLElBQUlDLFlBQVksR0FBR0YsTUFBTSxDQUFDRyxXQUFXLEdBQUcsR0FBRztBQUUzQyxTQUFTQyxPQUFPLENBQUNDLE1BQU0sRUFBRUMsWUFBWSxFQUFFO0VBQ25DLElBQUksQ0FBQ0MsR0FBRyxHQUFHRixNQUFNLENBQUNFLEdBQUc7RUFDckIsSUFBSSxDQUFDQyxLQUFLLEdBQUdILE1BQU0sQ0FBQ0csS0FBSztFQUN6QixJQUFJLENBQUNDLEtBQUssR0FBRyxJQUFJLElBQUlWLFdBQVcsR0FBRyxFQUFFLENBQUM7RUFDdEMsSUFBSSxDQUFDVyxNQUFNLEdBQUdYLFdBQVcsR0FBRyxFQUFFO0VBQzlCLElBQUksQ0FBQ1ksTUFBTSxHQUFHLENBQ1YsSUFBSSxDQUFDSixHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUksSUFBSSxDQUFDRSxLQUFLLEdBQUcsQ0FBRSxFQUM5QixJQUFJLENBQUNGLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBSSxJQUFJLENBQUNHLE1BQU0sR0FBRyxDQUFFLENBQ2xDO0VBQ0QsSUFBSSxDQUFDRSxNQUFNLEdBQUdQLE1BQU0sQ0FBQ08sTUFBTTtFQUUzQixJQUFJTixZQUFZLENBQUNPLFdBQVcsRUFBRSxJQUFJLENBQUNBLFdBQVcsR0FBR1AsWUFBWSxDQUFDTyxXQUFXO0FBQzdFO0FBRUFULE9BQU8sQ0FBQ1UsU0FBUyxDQUFDQyxJQUFJLEdBQUcsVUFBVUMsT0FBTyxFQUFpQjtFQUFBLElBQWZDLE1BQU0sdUVBQUcsSUFBSTtFQUVyREQsT0FBTyxDQUFDRSxTQUFTLEdBQUcsSUFBSSxDQUFDVixLQUFLO0VBQzlCUSxPQUFPLENBQUNHLFNBQVMsRUFBRTtFQUNuQjs7RUFFQTs7RUFFQSxJQUFJLElBQUksQ0FBQ1AsTUFBTSxLQUFLLEdBQUcsRUFBRTtJQUNyQixJQUFJUSxHQUFHO0lBQ1AsSUFBSUgsTUFBTSxLQUFLLE9BQU8sRUFBRTtNQUNwQkcsR0FBRyxHQUFHLElBQUksQ0FBQ1AsV0FBVztJQUMxQixDQUFDLE1BQU0sSUFBSUksTUFBTSxLQUFLLEtBQUssRUFBRTtNQUN6QixJQUFJSSxJQUFJLENBQUNDLEtBQUssQ0FBQ0MsUUFBUSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDcENILEdBQUcsR0FBR0ksUUFBUSxDQUFDQyxjQUFjLENBQUMseUJBQXlCLENBQUM7TUFDNUQsQ0FBQyxNQUFNO1FBQ0hMLEdBQUcsR0FBR0ksUUFBUSxDQUFDQyxjQUFjLENBQUMsd0JBQXdCLENBQUM7TUFDM0Q7SUFDSixDQUFDLE1BQU07TUFDSEwsR0FBRyxHQUFHSSxRQUFRLENBQUNDLGNBQWMsQ0FBQyxnQkFBZ0IsQ0FBQztJQUNuRDtJQUVBVCxPQUFPLENBQUNVLFNBQVMsQ0FBQ04sR0FBRyxFQUFFLElBQUksQ0FBQ2IsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQ0EsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQ0UsS0FBSyxFQUFFLElBQUksQ0FBQ0EsS0FBSyxDQUFDO0VBQzVFLENBQUMsTUFBTTtJQUNILElBQUlXLEdBQUc7SUFDUCxJQUFJSCxNQUFNLEtBQUssT0FBTyxFQUFFO01BQ3BCRyxHQUFHLEdBQUcsSUFBSSxDQUFDUCxXQUFXO0lBQzFCLENBQUMsTUFBTSxJQUFJSSxNQUFNLEtBQUssS0FBSyxFQUFFO01BQ3pCLElBQUlJLElBQUksQ0FBQ0MsS0FBSyxDQUFDQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUNwQ0gsR0FBRyxHQUFHSSxRQUFRLENBQUNDLGNBQWMsQ0FBQyxrQkFBa0IsQ0FBQztNQUNyRCxDQUFDLE1BQU07UUFDSEwsR0FBRyxHQUFHSSxRQUFRLENBQUNDLGNBQWMsQ0FBQyxtQkFBbUIsQ0FBQztNQUN0RDtJQUNKLENBQUMsTUFBTTtNQUNILElBQUlKLElBQUksQ0FBQ0MsS0FBSyxDQUFDSyxJQUFJLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUNqQ1AsR0FBRyxHQUFHSSxRQUFRLENBQUNDLGNBQWMsQ0FBQyxVQUFVLENBQUM7TUFDN0MsQ0FBQyxNQUFNLElBQUlKLElBQUksQ0FBQ0MsS0FBSyxDQUFDSyxJQUFJLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUN4Q1AsR0FBRyxHQUFHSSxRQUFRLENBQUNDLGNBQWMsQ0FBQyxlQUFlLENBQUM7TUFDbEQsQ0FBQyxNQUFNO1FBQ0hMLEdBQUcsR0FBR0ksUUFBUSxDQUFDQyxjQUFjLENBQUMsY0FBYyxDQUFDO01BQ2pEO0lBQ0o7SUFDQVQsT0FBTyxDQUFDVSxTQUFTLENBQUNOLEdBQUcsRUFBRSxJQUFJLENBQUNiLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUNBLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUNFLEtBQUssRUFBRSxJQUFJLENBQUNBLEtBQUssQ0FBQztFQUU1RTs7RUFFQTs7RUFFQTs7RUFFQU8sT0FBTyxDQUFDWSxJQUFJLEVBQUU7RUFDZFosT0FBTyxDQUFDYSxTQUFTLEVBQUU7QUFFdkIsQ0FBQztBQUVEQyxNQUFNLENBQUNDLE9BQU8sR0FBRzNCLE9BQU8ifQ==\n//# sourceURL=webpack-internal:///./src/scripts/gorilla.js\n");

/***/ }),

/***/ "./src/scripts/line_gauge.js":
/*!***********************************!*\
  !*** ./src/scripts/line_gauge.js ***!
  \***********************************/
/***/ (function(module) {

eval("let canvasWidth = window.innerWidth * .65;\nlet canvasHeight = window.innerHeight * .65;\nfunction LineGauge(object) {\n  this.pos = object.pos;\n  this.width = canvasWidth / 15;\n  this.height = 2 * (canvasWidth / 150);\n  this.degree = 1;\n  this.spacebarCounter = 0;\n  this.vectorDegree;\n  this.vectorWidth;\n}\nlet originalWidth = canvasWidth / 15;\nfunction calculateRadians(degree) {\n  let radians = degree * (Math.PI / 180);\n  return radians;\n}\nlet spacebarPressed;\nLineGauge.prototype.draw = function (context) {\n  // degree++;\n  // if (degree > 360) degree = 0;\n\n  context.fillStyle = '#A020F0';\n  context.save();\n  context.beginPath();\n  let that = this;\n  document.body.onkeyup = function (event) {\n    if (event.keyCode === 32 || event.code === \"Space\" || event.key === \" \") {\n      spacebarPressed = true;\n    } else {\n      spacebarPressed = false;\n    }\n  };\n  if (spacebarPressed && this.spacebarCounter === 0) {\n    // console.log(\"yay\")\n    this.spacebarCounter++;\n    spacebarPressed = false;\n    this.vectorDegree = this.degree;\n  } else if (spacebarPressed && this.spacebarCounter === 1) {\n    // console.log(\"yayyay\")\n    this.spacebarCounter++;\n\n    // this.degree = 0;\n    // this.width = originalWidth;\n\n    spacebarPressed = false;\n    this.vectorWidth = this.width;\n    this.getVector(this.vectorDegree, this.vectorWidth);\n  } else {\n    // console.log(\"nah\")\n  }\n  if (this.spacebarCounter === 0) {\n    this.rotate(context);\n  } else if (this.spacebarCounter === 1) {\n    context.translate(this.pos[0], this.pos[1]);\n    context.rotate(-1 * calculateRadians(this.degree));\n    context.translate(-1 * this.pos[0], -1 * this.pos[1]);\n    this.power();\n  } else {\n    context.translate(this.pos[0], this.pos[1]);\n    context.rotate(-1 * calculateRadians(this.degree));\n    context.translate(-1 * this.pos[0], -1 * this.pos[1]);\n  }\n\n  // this.rotate(context);\n  // this.power(context);\n\n  // context.rect(this.pos[0], this.pos[1], this.width, this.height);\n\n  let arrow_img = document.getElementById(\"arrow\");\n  context.drawImage(arrow_img, this.pos[0], this.pos[1], this.width, 2 * this.height);\n\n  // context.fill();\n  context.closePath();\n  context.restore();\n};\nlet rotatingUp;\nLineGauge.prototype.rotate = function (context) {\n  context.translate(this.pos[0], this.pos[1]);\n  if (this.degree >= 90) {\n    rotatingUp = false;\n  } else if (this.degree <= 1) {\n    rotatingUp = true;\n  }\n  if (rotatingUp) {\n    this.degree++;\n    context.rotate(-1 * calculateRadians(this.degree));\n  } else {\n    this.degree--;\n    context.rotate(-1 * calculateRadians(this.degree));\n  }\n  context.translate(-1 * this.pos[0], -1 * this.pos[1]);\n};\nlet widthIncreasing;\nLineGauge.prototype.power = function () {\n  if (this.width >= 2 * originalWidth) {\n    widthIncreasing = false;\n  } else if (this.width <= originalWidth) {\n    widthIncreasing = true;\n  }\n  if (widthIncreasing) {\n    this.width += originalWidth / 100;\n  } else {\n    this.width -= originalWidth / 100;\n  }\n};\nLineGauge.prototype.getVector = function (degree, width) {\n  let opposite = width * Math.sin(calculateRadians(degree)) / 35;\n  let adjacent = width * Math.cos(calculateRadians(degree)) / 35;\n  console.log(adjacent, opposite);\n  return [adjacent, -1 * opposite];\n};\nmodule.exports = LineGauge;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/line_gauge.js\n");

/***/ }),

/***/ "./src/scripts/tree.js":
/*!*****************************!*\
  !*** ./src/scripts/tree.js ***!
  \*****************************/
/***/ (function(module) {

eval("let canvasWidth = window.innerWidth * .65;\nlet canvasHeight = window.innerHeight * .65;\n\n//for reference\n// Math.random() * (max - min) + min;\n// let type1Height = (Math.random() * ((canvasHeight * (3 / 4)) - (canvasHeight * (1 / 2))) + (canvasHeight * (1 / 2)));\n// let type2Height = (Math.random() * ((canvasHeight * (1 / 2)) - (canvasHeight * (1 / 4))) + (canvasHeight * (1 / 4)));\n// let type3Height = (Math.random() * ((canvasHeight * (1 / 4)) - (canvasHeight * (1 / 8))) + (canvasHeight * (1 / 8)));\n\nfunction Tree(object) {\n  // this.pos = object.pos;\n\n  this.type = object.type; //tall tree is type 1, middle tree is type 2, short tree is type 3\n\n  this.width = canvasWidth / 15;\n\n  // Math.random() * (max - min) + min;\n  if (this.type === 1) {\n    this.height = Math.random() * (canvasHeight * (3 / 4) - canvasHeight * (1 / 2)) + canvasHeight * (1 / 2);\n  } else if (this.type === 2) {\n    this.height = Math.random() * (canvasHeight * (1 / 2) - canvasHeight * (1 / 4)) + canvasHeight * (1 / 4);\n  } else {\n    this.height = Math.random() * (canvasHeight * (1 / 4) - canvasHeight * (1 / 8)) + canvasHeight * (1 / 8);\n  }\n  this.posX = object.posX;\n  if (this.type === 1) {\n    this.pos = [object.posX, canvasHeight - this.height + 25];\n  } else {\n    this.pos = [object.posX, canvasHeight - this.height];\n  }\n  this.center = [this.pos[0] + this.width / 2, this.pos[1] + this.height / 2];\n}\nTree.prototype.draw = function (context) {\n  context.fillStyle = '#00FF00';\n  context.beginPath();\n  // context.rect(this.pos[0], this.pos[1], this.width, this.height);\n\n  let img;\n  if (this.type === 1) {\n    if (Math.floor(TICK / 200) % 2 === 0) {\n      img = document.getElementById(\"trees1\");\n    } else {\n      img = document.getElementById(\"trees1_mirrored\");\n    }\n  } else if (this.type === 2) {\n    if (this.posX === canvasWidth * (7.25 / 20)) {\n      //tree 2\n      if (Math.floor(TICK / 450) % 2 === 0) {\n        img = document.getElementById(\"trees2\");\n      } else {\n        img = document.getElementById(\"trees2_mirrored\");\n      }\n    } else {\n      //tree 4\n      if (Math.floor(TICK / 550) % 2 === 0) {\n        img = document.getElementById(\"trees2\");\n      } else {\n        img = document.getElementById(\"trees2_mirrored\");\n      }\n    }\n  } else {\n    img = document.getElementById(\"trees3\");\n  }\n  context.drawImage(img, this.pos[0], this.pos[1], this.width, this.height);\n\n  //(canvasWidth/15.405) ~= 40\n  // 21/320 = (3/40) * (7/8), 21/160 = (3/20) * (7/8)\n  context.fill();\n  context.closePath();\n};\nmodule.exports = Tree;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy90cmVlLmpzLmpzIiwibmFtZXMiOlsiY2FudmFzV2lkdGgiLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiY2FudmFzSGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJUcmVlIiwib2JqZWN0IiwidHlwZSIsIndpZHRoIiwiaGVpZ2h0IiwiTWF0aCIsInJhbmRvbSIsInBvc1giLCJwb3MiLCJjZW50ZXIiLCJwcm90b3R5cGUiLCJkcmF3IiwiY29udGV4dCIsImZpbGxTdHlsZSIsImJlZ2luUGF0aCIsImltZyIsImZsb29yIiwiVElDSyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJkcmF3SW1hZ2UiLCJmaWxsIiwiY2xvc2VQYXRoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ29yaWxsYXMvLi9zcmMvc2NyaXB0cy90cmVlLmpzP2YwZTAiXSwic291cmNlc0NvbnRlbnQiOlsiXG5sZXQgY2FudmFzV2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aCAqIC42NTtcbmxldCBjYW52YXNIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQgKiAuNjU7XG5cbi8vZm9yIHJlZmVyZW5jZVxuLy8gTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pICsgbWluO1xuLy8gbGV0IHR5cGUxSGVpZ2h0ID0gKE1hdGgucmFuZG9tKCkgKiAoKGNhbnZhc0hlaWdodCAqICgzIC8gNCkpIC0gKGNhbnZhc0hlaWdodCAqICgxIC8gMikpKSArIChjYW52YXNIZWlnaHQgKiAoMSAvIDIpKSk7XG4vLyBsZXQgdHlwZTJIZWlnaHQgPSAoTWF0aC5yYW5kb20oKSAqICgoY2FudmFzSGVpZ2h0ICogKDEgLyAyKSkgLSAoY2FudmFzSGVpZ2h0ICogKDEgLyA0KSkpICsgKGNhbnZhc0hlaWdodCAqICgxIC8gNCkpKTtcbi8vIGxldCB0eXBlM0hlaWdodCA9IChNYXRoLnJhbmRvbSgpICogKChjYW52YXNIZWlnaHQgKiAoMSAvIDQpKSAtIChjYW52YXNIZWlnaHQgKiAoMSAvIDgpKSkgKyAoY2FudmFzSGVpZ2h0ICogKDEgLyA4KSkpO1xuXG5mdW5jdGlvbiBUcmVlKG9iamVjdCkge1xuICAgIC8vIHRoaXMucG9zID0gb2JqZWN0LnBvcztcblxuICAgIHRoaXMudHlwZSA9IG9iamVjdC50eXBlOyAvL3RhbGwgdHJlZSBpcyB0eXBlIDEsIG1pZGRsZSB0cmVlIGlzIHR5cGUgMiwgc2hvcnQgdHJlZSBpcyB0eXBlIDNcblxuICAgIHRoaXMud2lkdGggPSBjYW52YXNXaWR0aCAvIDE1O1xuXG4gICAgLy8gTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pICsgbWluO1xuICAgIGlmICh0aGlzLnR5cGUgPT09IDEpIHtcbiAgICAgICAgdGhpcy5oZWlnaHQgPSAoTWF0aC5yYW5kb20oKSAqICgoY2FudmFzSGVpZ2h0ICogKDMgLyA0KSkgLSAoY2FudmFzSGVpZ2h0ICogKDEgLyAyKSkpICsgKGNhbnZhc0hlaWdodCAqICgxIC8gMikpKTtcbiAgICB9IGVsc2UgaWYgKHRoaXMudHlwZSA9PT0gMikge1xuICAgICAgICB0aGlzLmhlaWdodCA9IChNYXRoLnJhbmRvbSgpICogKChjYW52YXNIZWlnaHQgKiAoMSAvIDIpKSAtIChjYW52YXNIZWlnaHQgKiAoMSAvIDQpKSkgKyAoY2FudmFzSGVpZ2h0ICogKDEgLyA0KSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gKE1hdGgucmFuZG9tKCkgKiAoKGNhbnZhc0hlaWdodCAqICgxIC8gNCkpIC0gKGNhbnZhc0hlaWdodCAqICgxIC8gOCkpKSArIChjYW52YXNIZWlnaHQgKiAoMSAvIDgpKSk7XG4gICAgfVxuXG4gICAgdGhpcy5wb3NYID0gb2JqZWN0LnBvc1g7XG5cbiAgICBpZiAodGhpcy50eXBlID09PSAxKSB7XG4gICAgICAgIHRoaXMucG9zID0gW29iamVjdC5wb3NYLCBjYW52YXNIZWlnaHQgLSB0aGlzLmhlaWdodCArIDI1XVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucG9zID0gW29iamVjdC5wb3NYLCBjYW52YXNIZWlnaHQgLSB0aGlzLmhlaWdodF1cbiAgICB9XG5cblxuICAgIHRoaXMuY2VudGVyID0gW1xuICAgICAgICB0aGlzLnBvc1swXSArICh0aGlzLndpZHRoIC8gMiksXG4gICAgICAgIHRoaXMucG9zWzFdICsgKHRoaXMuaGVpZ2h0IC8gMilcbiAgICBdXG59XG5cblRyZWUucHJvdG90eXBlLmRyYXcgPSBmdW5jdGlvbiAoY29udGV4dCkge1xuXG4gICAgY29udGV4dC5maWxsU3R5bGUgPSAnIzAwRkYwMCc7XG4gICAgY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAvLyBjb250ZXh0LnJlY3QodGhpcy5wb3NbMF0sIHRoaXMucG9zWzFdLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XG5cbiAgICBsZXQgaW1nO1xuICAgIGlmICh0aGlzLnR5cGUgPT09IDEpIHtcbiAgICAgICAgaWYgKE1hdGguZmxvb3IoVElDSyAvIDIwMCkgJSAyID09PSAwKSB7XG4gICAgICAgICAgICBpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRyZWVzMVwiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGltZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidHJlZXMxX21pcnJvcmVkXCIpO1xuICAgICAgICB9XG5cbiAgICB9IGVsc2UgaWYgKHRoaXMudHlwZSA9PT0gMikge1xuICAgICAgICBpZiAodGhpcy5wb3NYID09PSAoY2FudmFzV2lkdGggKiAoNy4yNSAvIDIwKSkpIHsgLy90cmVlIDJcbiAgICAgICAgICAgIGlmIChNYXRoLmZsb29yKFRJQ0sgLyA0NTApICUgMiA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGltZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidHJlZXMyXCIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRyZWVzMl9taXJyb3JlZFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHsgLy90cmVlIDRcbiAgICAgICAgICAgIGlmIChNYXRoLmZsb29yKFRJQ0sgLyA1NTApICUgMiA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGltZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidHJlZXMyXCIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRyZWVzMl9taXJyb3JlZFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgICAgaW1nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0cmVlczNcIik7XG4gICAgfVxuXG4gICAgY29udGV4dC5kcmF3SW1hZ2UoaW1nLCB0aGlzLnBvc1swXSwgdGhpcy5wb3NbMV0sIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KTtcblxuICAgIC8vKGNhbnZhc1dpZHRoLzE1LjQwNSkgfj0gNDBcbiAgICAvLyAyMS8zMjAgPSAoMy80MCkgKiAoNy84KSwgMjEvMTYwID0gKDMvMjApICogKDcvOClcbiAgICBjb250ZXh0LmZpbGwoKTtcbiAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFRyZWU7Il0sIm1hcHBpbmdzIjoiQUFDQSxJQUFJQSxXQUFXLEdBQUdDLE1BQU0sQ0FBQ0MsVUFBVSxHQUFHLEdBQUc7QUFDekMsSUFBSUMsWUFBWSxHQUFHRixNQUFNLENBQUNHLFdBQVcsR0FBRyxHQUFHOztBQUUzQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNDLElBQUksQ0FBQ0MsTUFBTSxFQUFFO0VBQ2xCOztFQUVBLElBQUksQ0FBQ0MsSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUksQ0FBQyxDQUFDOztFQUV6QixJQUFJLENBQUNDLEtBQUssR0FBR1IsV0FBVyxHQUFHLEVBQUU7O0VBRTdCO0VB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\n//# sourceURL=webpack-internal:///./src/scripts/tree.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nb3JpbGxhcy8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;